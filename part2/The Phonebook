import React, { useState } from 'react'


const App = () => {
  const [ persons, setPersons ] = useState([
    { name: 'Arto Hellas', number: '040-123456' },
    { name: 'Ada Lovelace', number: '39-44-5323523' },
    { name: 'Dan Abramov', number: '12-43-234345' },
    { name: 'Mary Poppendieck', number: '39-23-6423122' }]);
  const [ newName, setNewName ] = useState('');
  const [ newNumber, setNewNumber ] = useState('');
  const [ newSearch, setNewSearch] = useState('')
  const [ showAll, setShowAll ] = useState(undefined);

  const handleNameChange = (e) => {
    setNewName(e.target.value);

    console.log(newName)
    
  };

  const updateInfo = (e) => {

    e.preventDefault();

    const found =
      persons
        .findIndex(person => person
          .name === newName
          .split(' ')
          .map(s => s.charAt(0)
          .toUpperCase() + s
          .substr(1))
          .join(' '));
    console.log(found)

    if( found === -1 ){

      const updatedInfo = persons
      .concat({
        name: newName
        .split(' ')
        .map(s => s
          .charAt(0)
          .toUpperCase() + s
          .substr(1))
          .join(' '),
          number: newNumber
        }) 
      setPersons(updatedInfo);
      setNewName('');
      setNewNumber('');
    } else {

      alert(`${newName} is already added to phonebook`)
      setNewName('')
      setNewNumber('')
    }; 
  };

  const handleNumberChange = (e) => {
    setNewNumber(e.target.value)
  };


  const handleFilter = (e) => {
    setNewSearch(e.target.value)

    const found = 
    persons
      .findIndex(person => person
        .name
        .includes(newSearch
          .split(' ')
          .map(s => s
            .charAt(0)
            .toUpperCase() + s
            .substr(1))
            .join(' ')));

    if(found === -1) {
      setShowAll(false)
    } else {
      setShowAll(true)
    }

  };

  const infoToShow = showAll ? persons.filter(person => person.name.includes(newSearch.split(' ').map(s => s.charAt(0).toUpperCase() + s.substr(1)).join(' ')) || person.name.includes(newSearch)) : persons;



  return (
    <div>
      <h1>Phonebook</h1>
      <form>
        filter shown with
        <input
        value={newSearch}
        onChange={handleFilter}/>
      </form>
    <div>
    </div>
      <h2>add a new</h2>
      <form onSubmit={updateInfo}>
        <div>
          name: <input
            onChange={handleNameChange}
            value={newName}/>
        </div>
      </form>
      <form onSubmit={updateInfo}>
        <div>
          number: <input
            onChange={handleNumberChange}
            value={newNumber}
            type="text"
            name="option"/>
        </div>
        <div>
          <button type="submit">add</button>
        </div>
      </form>
      <h2>Numbers</h2>
      <div>
          {infoToShow.map((info) => {
            info.id = persons.length * Math.random()
            return <p key={info.id}>{info.name} {info.number}</p>})}
      </div>
    </div>
  )
}

export default App
